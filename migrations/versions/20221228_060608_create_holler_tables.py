"""Create Holler Tables

Revision ID: a1a0f34563bf
Revises: 
Create Date: 2022-12-28 06:06:08.716767

"""
from alembic import op
import sqlalchemy as sa

import os
environment = os.getenv("FLASK_ENV")
SCHEMA = os.environ.get("SCHEMA")

# revision identifiers, used by Alembic.
revision = 'a1a0f34563bf'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('first_name', sa.String(length=256), nullable=False),
    sa.Column('last_name', sa.String(length=256), nullable=False),
    sa.Column('profile_name', sa.String(length=40), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('hashed_password', sa.String(length=255), nullable=False),
    sa.Column('biography', sa.String(length=256), nullable=True),
    sa.Column('location', sa.String(length=256), nullable=True),
    sa.Column('review_count', sa.Integer(), nullable=False),
    sa.Column('profile_image', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('businesses',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=256), nullable=False),
    sa.Column('address', sa.String(length=256), nullable=False),
    sa.Column('address_2', sa.String(length=256), nullable=True),
    sa.Column('city', sa.String(length=256), nullable=False),
    sa.Column('state', sa.String(length=256), nullable=False),
    sa.Column('postal_code', sa.Integer(), nullable=False),
    sa.Column('country', sa.String(length=256), nullable=False),
    sa.Column('phone', sa.String(length=256), nullable=False),
    sa.Column('web_address', sa.Text(), nullable=True),
    sa.Column('is_open', sa.Boolean(), nullable=False),
    sa.Column('latitude', sa.Float(), nullable=False),
    sa.Column('longitude', sa.Float(), nullable=False),
    sa.Column('description', sa.String(length=256), nullable=True),
    sa.Column('stars', sa.Float(), nullable=False),
    sa.Column('review_count', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('business_attributes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('business_id', sa.Integer(), nullable=False),
    sa.Column('health_score', sa.String(length=256), nullable=True),
    sa.Column('price_range', sa.Integer(), nullable=True),
    sa.Column('free_wifi', sa.Boolean(), nullable=True),
    sa.Column('parking_lot', sa.Boolean(), nullable=True),
    sa.Column('valet_parking', sa.Boolean(), nullable=True),
    sa.Column('street_parking', sa.Boolean(), nullable=True),
    sa.Column('garage_parking', sa.Boolean(), nullable=True),
    sa.Column('bike_parking', sa.Boolean(), nullable=True),
    sa.Column('business_accepts_cryptocurrency', sa.Boolean(), nullable=True),
    sa.Column('business_accepts_credit_card', sa.Boolean(), nullable=True),
    sa.Column('dogs_allowed', sa.Boolean(), nullable=True),
    sa.Column('wheelchair_accessible', sa.Boolean(), nullable=True),
    sa.Column('outdoor_seating', sa.Boolean(), nullable=True),
    sa.Column('takes_reservation', sa.Boolean(), nullable=True),
    sa.Column('offers_catering', sa.Boolean(), nullable=True),
    sa.Column('offers_takeout', sa.Boolean(), nullable=True),
    sa.Column('offers_delivery', sa.Boolean(), nullable=True),
    sa.Column('good_for_kids', sa.Boolean(), nullable=True),
    sa.Column('moderate_noise', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['business_id'], ['businesses.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('business_categories',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('business_id', sa.Integer(), nullable=False),
    sa.Column('category_name', sa.String(length=256), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['business_id'], ['businesses.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('business_hours',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('business_id', sa.Integer(), nullable=False),
    sa.Column('day', sa.String(length=256), nullable=False),
    sa.Column('open_time', sa.Time(), nullable=False),
    sa.Column('close_time', sa.Time(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['business_id'], ['businesses.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('reviews',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('business_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('stars', sa.Integer(), nullable=False),
    sa.Column('review', sa.String(length=256), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['business_id'], ['businesses.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('images',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('business_id', sa.Integer(), nullable=False),
    sa.Column('review_id', sa.Integer(), nullable=True),
    sa.Column('image_url', sa.Text(), nullable=False),
    sa.Column('caption', sa.String(length=256), nullable=True),
    sa.Column('label', sa.String(length=256), nullable=False),
    sa.Column('tag', sa.String(length=256), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['business_id'], ['businesses.id'], ),
    sa.ForeignKeyConstraint(['review_id'], ['reviews.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )

    if environment == "production":
        op.execute(f"ALTER TABLE users SET SCHEMA {SCHEMA};")
        op.execute(f"ALTER TABLE reviews SET SCHEMA {SCHEMA};")
        op.execute(f"ALTER TABLE images SET SCHEMA {SCHEMA};")
        op.execute(f"ALTER TABLE businesses SET SCHEMA {SCHEMA};")
        op.execute(f"ALTER TABLE business_hours SET SCHEMA {SCHEMA};")
        op.execute(f"ALTER TABLE business_categories SET SCHEMA {SCHEMA};")
        op.execute(f"ALTER TABLE business_attributes SET SCHEMA {SCHEMA};")
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('images')
    op.drop_table('reviews')
    op.drop_table('business_hours')
    op.drop_table('business_categories')
    op.drop_table('business_attributes')
    op.drop_table('businesses')
    op.drop_table('users')
    # ### end Alembic commands ###